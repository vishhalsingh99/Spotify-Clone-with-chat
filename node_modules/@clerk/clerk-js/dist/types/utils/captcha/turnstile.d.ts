import type { CaptchaAppearanceOptions, CaptchaWidgetType } from '@clerk/types';
import type { CaptchaOptions } from './types';
interface RenderOptions {
    /**
     * Every widget has a sitekey. This sitekey is associated with the corresponding widget configuration and is created upon the widget creation.
     */
    sitekey: string;
    /**
     * Controls whether the widget should automatically retry to obtain a token if it did not succeed.
     * The default is auto, which will retry automatically. This can be set to never to disable retry upon failure.
     */
    retry?: 'auto' | 'never';
    /**
     * When retry is set to auto, retry-interval controls the time between retry attempts in milliseconds.
     * Value must be a positive integer less than 900000.
     * @default 8000
     */
    'retry-interval'?: number;
    /**
     * Automatically refreshes the token when it expires.
     * Can take auto, manual or never.
     * @default 'auto'
     */
    'refresh-expired'?: 'auto' | 'manual' | 'never';
    /**
     * A JavaScript callback invoked upon success of the challenge.
     * The callback is passed a token that can be validated.
     * @param token string
     */
    callback?: (token: string) => void;
    /**
     * A JavaScript callback invoked when there is an error (e.g. network error or the challenge failed)
     * @param errorCode string
     */
    'error-callback'?: (errorCode: string) => void;
    /**
     * A JavaScript callback invoked before the challenge enters interactive mode.
     */
    'before-interactive-callback'?: () => void;
    /**
     * A JavaScript callback invoked when a given client/browser is not supported by the widget.
     */
    'unsupported-callback'?: () => boolean;
    /**
     * Appearance controls when the widget is visible.
     * It can be always (default), execute, or interaction-only.
     * Refer to Appearance Modes for more information:
     * https://developers.cloudflare.com/turnstile/get-started/client-side-rendering/#appearance-modes
     * @default 'always'
     */
    appearance?: 'always' | 'execute' | 'interaction-only';
    /**
     * The widget theme. Can take the following values: light, dark, auto.
     * The default is auto, which respects the user preference. This can be forced to light or dark by setting the theme accordingly.
     * @default 'auto'
     */
    theme?: CaptchaAppearanceOptions['theme'];
    /**
     * The widget size. Can take the following values: normal, flexible, compact.
     * @default 'normal'
     */
    size?: CaptchaAppearanceOptions['size'];
    /**
     * Language to display, must be either: auto (default) to use the language that the visitor has chosen,
     * or an ISO 639-1 two-letter language code (e.g. en) or language and country code (e.g. en-US).
     * Refer to the list of supported languages for more information.
     * https://developers.cloudflare.com/turnstile/reference/supported-languages
     */
    language?: CaptchaAppearanceOptions['language'];
    /**
     * A custom value that can be used to differentiate widgets under the same sitekey
     * in analytics and which is returned upon validation. This can only contain up to
     * 32 alphanumeric characters including _ and -.
     */
    action?: string;
}
interface Turnstile {
    execute: (container?: string | HTMLElement | null, params?: RenderOptions) => void;
    render: (container?: string | HTMLElement | null, params?: RenderOptions) => string;
    remove: (widgetId: string) => void;
    reset: (widgetId: string) => void;
}
declare global {
    export interface Window {
        turnstile: Turnstile;
    }
}
export declare const shouldRetryTurnstileErrorCode: (errorCode: string) => boolean;
export declare const getTurnstileToken: (opts: CaptchaOptions) => Promise<{
    captchaToken: string;
    captchaWidgetType: CaptchaWidgetType;
}>;
export {};
